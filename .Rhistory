reticulate::repl_python()
import numpy as np
pip install jupyter rsconnect-jupyter
pip install jupyter
install jupyter
pip install numpy
python -m pip install jupyter
import pandas as pd
import os
import matplotlib.pyplot as plt
curr_dir = 'C:/Users/jomors/OneDrive/_JHU/AS.470.708 Open Data in Python/Project/'
os.chdir(curr_dir)
filename = 'Data/WBG_GovTech Dataset_Oct2022.xlsx'
govtech_raw = pd.read_excel(filename, sheet_name = 'CG_GTMI_Groups', nrows=198)
govtech_raw.head()
govtech_raw.columns
govtech_raw.plot(x='GTEI', y='DCEI', kind='scatter')
plt.show()
reticulate::repl_python()
import numpy as np
pip3
pip
reticulate::repl_python()
import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt
curr_dir = os.getcwd()
View(curr_dir)
filename = '../Data/WBG_GovTech Dataset_Oct2022.xlsx'
filename = '../Data/WBG_GovTech Dataset_Oct2022.xlsx'
govtech_raw = pd.read_excel(filename, sheet_name = 'CG_GTMI_Data', nrows=396)
View(govtech_raw)
govtech_raw.head()
govtech_raw.columns
govtech_2022 = govtech_raw[govtech_raw.Year == '2022']
View(govtech_2022)
govtech_raw.columns
govtech_2022 = govtech_raw[govtech_raw.Year == 2022]
View(govtech_2022)
govtech = govtech_2022['Code', 'Economy', 'Population']
govtech_2022["Code"]
govtech_2022["Code", "Economy"]
govtech = govtech_2022[['Code', 'Economy', 'Population']]
View(govtech)
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI']]
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg', 'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI']]
View(govtech)
df1 = pd.DataFrame({"Var1":[1, 2, 1, 2, 2],
"Var2":[9, 8, 7, 6, 6],
"Var3":[5, np.nan, 4, 3, 3]})
df1
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI']]
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI']]
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI',
'I-45', 'I-45.4', 'I-45.5', 'I-45.5.1', 'I-45.5.3',
'I-45.6', 'I-45.7']]
View(govtech)
reticulate::repl_python()
import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt
curr_dir = os.getcwd()
filename = '../Data/WBG_GovTech Dataset_Oct2022.xlsx'
govtech_raw = pd.read_excel(filename, sheet_name = 'CG_GTMI_Data', nrows=396)
govtech_2022 = govtech_raw[govtech_raw.Year == 2022]
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI',
'I-45', 'I-45.4', 'I-45.5', 'I-45.5.1', 'I-45.5.3',
'I-45.6', 'I-45.7']]
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI',
'I-45', 'I-45.4', 'I-45.5', 'I-45.5.1', 'I-45.5.3',
'I-45.6', 'I-45.7']]
# Rename columns
colnames = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FoucsArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'}
govtech.rename(columns = colnames)
View(govtech)
View(colnames)
govtech.rename(columns = colnames)
govtech.rename(columns = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FoucsArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'})
View(govtech)
govtech = govtech.rename(columns = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FoucsArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'})
View(govtech)
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI',
'I-45', 'I-45.4', 'I-45.5', 'I-45.5.1', 'I-45.5.3',
'I-45.6', 'I-45.7']]
colnames = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FoucsArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'}
govtech = govtech.rename(columns = colnames)
View(govtech)
?read_excel
?pandas.read_excel
filename = '../Data/WBG_DG-GovTech_Projects_Oct2022.xlsx'
projects_raw = pd.read_excel(filename, sheet_name = 'CG_GTMI_Data', nrows=1449)
projects_raw = pd.read_excel(filename, sheet_name = 'DG Projects', nrows=1449)
View(projects_raw)
projects = projects_raw[['Project ID', 'Region', 'country', 'ICROut', 'IEGOut']]
projects = projects_raw[['Project ID', 'Region', 'Country', 'ICROut', 'IEGOut']]
projects = projects_raw[['Project ID', 'Region', 'Country', 'ICR Out', 'IEG Out']]
colnames = {'Project ID':'ProjectID', 'ICR Out':'ICROutcome', 'IEG Out':'IEGOutcome'}
projects = projects.rename(columns = colnames)
View(projects)
?pandas.read_csv
filename = '../Data/API_NY.GDP.MKTP.CD_DS2_en_csv_v2_4770391.csv'
gdp_raw = pd.read_csv(filename, header=5)
View(gdp_raw)
gdp_raw = pd.read_csv(filename, header=2)
View(gdp_raw)
gdp = gdp_raw[['Country Name', 'Country Code', '2021']]
gdp = gdp.rename(columns={'Country Name':'Country', 'Country Code':'Code', '2021':'GDP2021'})
View(gdp)
govtech.describe()
govtech['GTMI'].describe()
govtech['Code'].describe()
govtech.Code
govtech.Code.describe()
govtech.Code.describe()
gdp.Code.describe()
projects.ProjectID.describe()
govtech.GTMI.describe()
govtech.CGSI.describe()
govtech.PSDI.describe()
govtech.DCEI.describe()
govtech.GTEI.describe()
govtech.GTMI.median()
govtech.CGSI.median()
govtech.PSDI.median()
govtech.DCEI.median()
govtech.GTEI.median()
projectsICR = projects[['ProjectID', 'Region', 'Country', 'ICROutcome']]
projectsIEG = projects[['ProjectID', 'Region', 'Country', 'IEGOutcome']]
projectsICR.dropna()
projectsICR = projectsICR.dropna()
projectsIEG = projectsIEG.dropna()
projectsRated = projectsICR.merge(projectsIEG, on='ProjectID', how='outer',
suffixes=('_ICR', '_IEG'))
View(projectsRated)
projectsRated = projectsICR.merge(projectsIEG, on=('ProjectID', 'Region', 'Country'),
how='outer', suffixes=('_ICR', '_IEG'))
View(projectsRated)
projectsRated.ICROutcome.isna()
projectsRated.ICROutcome.isna().sum()
projectsRated.IEGOutcome.isna().sum()
projects = projectsICR.merge(projectsIEG, on=('ProjectID', 'Region', 'Country'),
how='outer', suffixes=('_ICR', '_IEG'))
projects.ProjectID.describe()
govtech.DS_Strategy_Program
govtech.DS_Strategy_Program.count()
govtech.DS_Strategy_Program[govtech.DS_Strategy_Program = 1]
govtech.DS_Strategy_Program[govtech.DS_Strategy_Program == 1]
govtech.DS_Strategy_Program[govtech.DS_Strategy_Program == 1].count()
govtech.DS_Strategy_Program.value_counts()
govtech.DS_Strategy_Program.sort().value_counts()
govtech.DS_Strategy_Program.sort()    #.value_counts()
govtech.DS_Strategy_Program.value_counts().sort()
govtech.DS_Strategy_Program.value_counts()
govtech.FocusArea.value_counts()
colnames = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FoucusArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'}
govtech = govtech.rename(columns = colnames)
govtech.FocusArea.value_counts()
colnames = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FocusArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'}
govtech = govtech.rename(columns = colnames)
govtech.FocusArea.value_counts()
View(govtech)
govtech = govtech_2022[['Code', 'Economy', 'Population', 'Level', 'Reg',
'Grp', 'GTMI', 'CGSI', 'PSDI', 'DCEI', 'GTEI',
'I-45', 'I-45.4', 'I-45.5', 'I-45.5.1', 'I-45.5.3',
'I-45.6', 'I-45.7']]
# Rename columns
colnames = {'Economy':'Country', 'Level':'IncomeLevel', 'Reg':'Region',
'Grp':'Group', 'I-45':'DS_Strategy_Program', 'I-45.4':'FocusArea',
'I-45.5':'DSProgram', 'I-45.5.1':'DSProgramType',
'I-45.5.3':'DSProgramMandatory', 'I-45.6':'DSProgramExternal',
'I-45.7':'DSProgramPublished'}
govtech = govtech.rename(columns = colnames)
View(govtech)
govtech.FocusArea.value_counts()
govtech.DSProgramType.value_counts()
govtech.Code.count()
projects.ProjectID.describe()
projects.ProjectID.count()
gdp.GDP2021.describe()
gdp.GDP2021.mean()
gdp.GDP2021.median()
gdp.GDP2021.std()
gdp.GDP2021.min()
gdp.GDP2021.max()
projects.ICROutcome.value_counts()
projects.IEGOutcome.value_counts()
reticulate::repl_python()
import statistics
import numpy as np
import pandas as pd
from scipy import stats
import statsmodels.api as sm
import statsmodels.formula.api as smf
my_list=[1,2,3,4]
statistics.mean(my_list)
my_array=np.array([1,2,3,4])
my_array.mean()      # A method associated with the array
state = pd.read_csv('state.csv')
curr_dir = os.getcwd()
import os
curr_dir = os.getcwd()
